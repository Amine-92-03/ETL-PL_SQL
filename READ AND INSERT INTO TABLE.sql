SET SERVEROUTPUT ON;
DECLARE
L_FILE UTL_FILE.FILE_TYPE;
L_LOCATION VARCHAR2(100) := 'ORACLE_BASE';
L_FILENAME VARCHAR2(100) := 'test.txt';
L_TEXT VARCHAR2(32672);
L_TEXT_MODIFIED VARCHAR2(32672);
SQLSTMT  VARCHAR2(32672);
BEGIN
    L_FILE := UTL_FILE.FOPEN(L_LOCATION, L_FILENAME, 'r'); 
    --DELETE FROM  TEST_INSERT;
    --FOR I IN 1..20
    DBMS_OUTPUT.PUT_LINE('HELLO AMINE');  
    LOOP
        UTL_FILE.GET_LINE(L_FILE, L_TEXT);
        --DBMS_OUTPUT.PUT_LINE(L_TEXT); 
        SELECT REPLACE(L_TEXT,';',''',''') INTO L_TEXT_MODIFIED FROM DUAL;
        --DBMS_OUTPUT.PUT_LINE(L_TEXT_MODIFIED);  
        SQLSTMT := 'INSERT INTO TEST_INSERT VALUES(''' || L_TEXT_MODIFIED ||''')';
        --INSERT INTO TEST_INSERT VALUES(''' || L_TEXT_MODIFIED ||''');
        --DBMS_OUTPUT.PUT_LINE(SQLSTMT); 
        EXECUTE IMMEDIATE SQLSTMT;
        --INSERT INTO TESTTABLE(p_nom,nom) VALUES(L_TEXT,L_TEXT);
    END LOOP;
    UTL_FILE.FCLOSE(L_FILE);
EXCEPTION
    WHEN UTL_FILE.READ_ERROR THEN
        DBMS_OUTPUT.PUT_LINE(' Cannot read file'); 
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE(' END FILE ');  
        UTL_FILE.FCLOSE(L_FILE);
    WHEN UTL_FILE.INVALID_FILENAME THEN
        DBMS_OUTPUT.PUT_LINE(' Cannot read file');
    WHEN UTL_FILE.INVALID_PATH THEN
        DBMS_OUTPUT.PUT_LINE(' Cannot read file');
END;
/


--SELECT COUNT(*) FROM OT.TEST_INSERT

--INSERT INTO TEST_INSERT VALUES('SYS','PUBLIC','10-30-2022 12:14:53')


--DELETE FROM  TEST_INSERT

--SELECT * FROM all_directories

--CREATE OR REPLACE DIRECTORY log_dir AS 'C:\Users\PC\Documents\www\ETL PL_SQL';
--GRANT READ ON DIRECTORY log_dir TO SYS; 
--GRANT WRITE ON DIRECTORY log_dir TO SYS;


